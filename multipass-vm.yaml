# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Creates Hyper-V Virtual Machines using Multipass >>>>>
  hosts: kubernetes_cluster
  gather_facts: no

  vars:
    node: "{{ hostvars[inventory_hostname] }}"
    
  tasks:
    - name: Prepare cloud init configuration files
      become_user: root
      vars:
        config_file: "{{ _work_dir }}/{{ inventory_hostname }}-config.yaml"
      block:
        - name: Create working directory
          file:
            path: "{{ _work_dir }}"
            state: directory

        - name: Generate ssh keys for Ansible host (if required)
          shell: |
                  ssh-keygen -t rsa -q -f "/root/.ssh/id_rsa" -N ""
          args:
            creates: /root/.ssh/id_rsa

        - name: Cleanup old configuration files
          file:
            path: "{{ config_file }}"
            state: absent

        - name: Create cloud-init configuration file
          vars:
            id_rsa_pub: "{{ lookup('file','/root/.ssh/id_rsa.pub') }}"
          blockinfile:
            path: "{{ config_file }}"
            create: yes
            block: |
                    #cloud-config
                    passwd: '{{ _setup.root_pwd }}'
                    chpasswd: { expire: False }
                    ssh_pwauth: True
                    manage_etc_hosts: localhost

                    users:
                      - default
                      - name: {{ _kube.user }}
                        gecos: K8s Admin
                        groups: users, admin
                        sudo: ALL=(ALL) NOPASSWD:ALL
                        shell: /bin/bash
                        passwd: {{ _kube.pwd }}
                        lock_passwd: false

                    write_files:
                      - path: /etc/netplan/99-custom.yaml      
                        content: |
                          network:
                            version: 2
                            ethernets:
                              eth1:
                                dhcp4: false
                                addresses: 
                                  - {{ node.ansible_host }}/{{ _setup.network.cidr }}
                                nameservers:
                                  addresses: [{{ _setup.network.dns }}]
                                routes:
                                  - to: default
                                    via: {{ _setup.network.gateway }}           

                    runcmd:
                      - sudo netplan apply   
                      - sed -i '/#PermitRootLogin/a\\PermitRootLogin yes' /etc/ssh/sshd_config
                      - systemctl restart ssh
                      - usermod --password '{{ _setup.root_pwd }}' root
                      - echo '{{ id_rsa_pub }}' > /root/.ssh/authorized_keys  

      delegate_to: localhost

    - name: Creating Virtual Machines
      vars:
        config_file: "{{ inventory_hostname }}-config.yaml"
      block:
        - name: Copy cloud init configuration file to winrm host
          win_copy:
            src: "{{ _work_dir }}/{{ config_file }}"
            dest: '%userprofile%\'

        - name: Launching Virtual Machines with Multipass
          ansible.windows.win_shell: |
              multipass authenticate {{ _setup.multipass.passphrase }}
              multipass launch 22.04 -n {{ inventory_hostname }} -c {{ spec.v_cpu }} -d {{ spec.disk_size }} -m {{ spec.ram_size }} --cloud-init '{{ config_file }}' --network name={{ _vm.switch }},mode=manual
          args:  
            chdir: "%userprofile%"        
      
        - name: Wait for Virtual Machines to be ready
          ansible.windows.win_powershell:
            script: |
              Wait-VM -Name {{ inventory_hostname }} -For Heartbeat

        - name: Enabling Dynamic Memory in Virtual Machines
          ansible.windows.win_powershell:
            script: |
              multipass stop {{ inventory_hostname }}
              Set-VMMemory {{ inventory_hostname }} -MinimumBytes {{ spec.min_ram_size }} -DynamicMemoryEnabled 1
              multipass start {{ inventory_hostname }}

        - name: Wait for Virtual Machines to be ready
          ansible.windows.win_powershell:
            script: |
              Wait-VM -Name {{ inventory_hostname }} -For Heartbeat

        - name: Remove configuration files from winrm host  
          ansible.windows.win_file:
            path: | 
                 "%userprofile%\{{ config_file }}"
            state: absent

      delegate_to: winrm_host
   
    - name: Cleanup configuration files
      become_user: root
      vars:
        target: "{{ _work_dir }}/{{ inventory_hostname }}-config.yaml"
      file:
        path: "{{ target }}"
        state: absent
      when: _setup.cleanup
      delegate_to: localhost
