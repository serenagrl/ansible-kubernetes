# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Installs and configures AWX >>>>>
  hosts: kubernetes_control_planes[0]
  become_user: "{{ _kube.user }}"

  vars:
    values_file: "{{ _work_dir }}/awx-values.yaml"

  tasks:
    - name: Get ingress class
      kubernetes.core.k8s_info:
        kind: IngressClass
      register: ingress_class

    - name: Create AWX chart values file
      become_user: root
      vars:
        ingress_name: "{{ ingress_class.resources[0].metadata.name }}"
      blockinfile:
        create: yes
        path: "{{ values_file }}"
        block: |
          fullnameOverride: awx
          AWX:
            enabled: true

            spec:
              ingress_type: ingress
              ingress_class_name: "{{ ingress_name }}"
              hostname: serena.k8s.local
              ingress_path: /awx

      delegate_to: localhost

    - name: Install AWX
      block:
        - name: Add AWX chart repo
          kubernetes.core.helm_repository:
            name: awx-operator
            repo_url: "https://ansible.github.io/awx-operator/"

        - name: Deploy AWX
          vars:
            version: "{% if _pkg.awx is defined and _pkg.awx and _pkg.awx != 'latest' %}{{ _pkg.awx }}{% endif %}"
          kubernetes.core.helm:
            name: awx
            atomic: yes
            chart_ref: awx-operator/awx-operator
            chart_version: "{{ version }}"
            namespace: awx
            create_namespace: yes
            values: "{{ lookup('file', values_file) | from_yaml }}"
            wait: yes

        - name: Waiting for AWX deployments to be ready
          shell: |
             for d in $(kubectl -n awx get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n awx deployment/$d; done;

        - name: Waiting for AWX controller host to be up
          uri:
            url: "http://{{ _ingress.host }}/awx"
          register: result
          until: result.status == 200
          retries: 15
          delay: 30

        - import_tasks: ./tasks/task-get-secret.yaml
          vars:
            name: "awx portal password"
            command: "kubectl get secret -n awx awx-admin-password -o jsonpath='{.data.password}'"
            filename: "awx_password"

    - name: Cleanup 
      become_user: root
      file:
        state: absent
        path: "{{ values_file }}"
      when: _awx.cleanup
      delegate_to: localhost

- import_playbook: kube-awx-register.yaml
  when: _awx.auto_register
