# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: Configuring kafka cluster manifest
  become_user: root
  delegate_to: localhost
  block:
    - ansible.builtin.import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "Kafka cluster"
        namespace: "kafka"
        repo_path: "strimzi/strimzi-kafka-operator"
        pkg_version: "{{ kafka.cluster.version | default }}"
        version_prefix: ""
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/examples/kafka/kafka-persistent.yaml"]

    - name: Change name
      ansible.builtin.replace:
        path: "{{ MANIFEST_FILE }}"
        regexp: '(  name: my-cluster)'
        replace: "  name: kafka"

    - name: Configure to run on control-planes only
      block:
        - name: Configure kafka to run on control-planes only
          ansible.builtin.replace:
            path: "{{ MANIFEST_FILE }}"
            regexp: '^\s*(kafka:)$'
            replace: |8-
                      \1
                        template:
                          pod:
                            tolerations:
                              - effect: NoSchedule
                                key: node-role.kubernetes.io/control-plane
                                operator: Exists
                            affinity:
                              nodeAffinity:
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  nodeSelectorTerms:
                                  - matchExpressions:
                                    - key: node-role.kubernetes.io/control-plane
                                      operator: Exists

        - name: Configure zookeeper to run on control-planes only
          ansible.builtin.replace:
            path: "{{ MANIFEST_FILE }}"
            regexp: '^\s*(zookeeper:)$'
            replace: |8-
                      \1
                        template:
                          pod:
                            tolerations:
                              - effect: NoSchedule
                                key: node-role.kubernetes.io/control-plane
                                operator: Exists
                            affinity:
                              nodeAffinity:
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  nodeSelectorTerms:
                                  - matchExpressions:
                                    - key: node-role.kubernetes.io/control-plane
                                      operator: Exists

        - name: Configure entity operator to run on control-planes only
          ansible.builtin.replace:
            path: "{{ MANIFEST_FILE }}"
            regexp: '^\s*(entityOperator:)$'
            replace: |8-
                      \1
                        template:
                          pod:
                            tolerations:
                              - effect: NoSchedule
                                key: node-role.kubernetes.io/control-plane
                                operator: Exists
                            affinity:
                              nodeAffinity:
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  nodeSelectorTerms:
                                  - matchExpressions:
                                    - key: node-role.kubernetes.io/control-plane
                                      operator: Exists
      when: not _kube.allow_scheduling

- name: Install kafka cluster
  kubernetes.core.k8s:
    apply: yes
    force: yes
    namespace: kafka
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup

- name: Wait for kafka cluster to be ready
  ansible.builtin.shell: |
    kubectl wait --for=condition=Ready kafkas kafka -n kafka --timeout=300s
    for d in $(kubectl -n kafka get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n kafka deployment/$d; done;