fullnameOverride: gitlab-runner

envVars:
  - name: CI_SERVER_TLS_CA_FILE
    value: /home/gitlab-runner/.gitlab-runner/certs/ca.crt

certsSecretName: gitlab-ingress-tls

gitlabUrl: http://gitlab-webservice-default:8181

replicas: 1

# Specify this if connecting to non kubernetes Gitlab and remove the runners.secret value at the bottom
# runnerRegistrationToken: ""

{% if not _kube.allow_scheduling %}
tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    operator: Exists
nodeSelector:
  node-role.kubernetes.io/control-plane: ""
{% endif %}

rbac:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - '*'
      verbs:
        - '*'

runners:
  config: |
    [[runners]]
      clone_url = "http://gitlab-webservice-default:8181/"
      pre_get_sources_script = "update-ca-certificates"
      [runners.cache]
        Type = "s3"
        Path = "gitlab-runner"
        Shared = true
        MaxUploadedArchiveSize = 0
        [runners.cache.s3]
          ServerAddress = "gitlab-minio-hl:9000"
          Insecure = true
          AccessKey = "{{ minio_credentials.accesskey }}"
          SecretKey = "{{ minio_credentials.secretkey }}"
          BucketName = "runner-cache"
          BucketLocation = "us-east-1"
      [runners.kubernetes]
        image = "{{ gitlab_runner.image }}"

{% if not _kube.cluster.use_dns_server %}
        [[runners.kubernetes.host_aliases]]
          ip = "{{ _kube.cluster.address }}"
          hostnames = ["core.harbor.k8s.local"]
{% endif %}

        [runners.kubernetes.volumes]
          [[runners.kubernetes.volumes.secret]]
            name = "gitlab-ingress-tls"
            mount_path = "/usr/local/share/ca-certificates/"
            read_only = false
            [runners.kubernetes.volumes.secret.items]
              "ca.crt" = "ca.crt"

{% if not _kube.allow_scheduling %}
        [runners.kubernetes.node_tolerations]
          "node-role.kubernetes.io/control-plane" = "NoSchedule"
{% endif %}

  secret: gitlab-gitlab-runner-secret
