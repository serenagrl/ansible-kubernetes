# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

# Sets the cluster_address fact
- import_tasks: ./tasks/task-get-cluster-address.yaml
  vars:
    ingress_type: "{{ _kube.ingress_type }}"

- name: Add gitlab portal DNS entries to /etc/hosts
  become_user: root
  delegate_to: "{{ item }}"
  lineinfile:
    path: /etc/hosts
    insertafter: "127.0.0.1 localhost"
    line: "{{ cluster_address }} gitlab.{{ domain }}"
  loop: "{{ groups[register_dns_to] }}"
  ignore_errors: yes
  ignore_unreachable: yes

- name: Create gitlab namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: gitlab 

- name: Install Gitlab
  block:
    - name: Add Gitlab chart repo
      kubernetes.core.helm_repository:
        name: gitlab
        repo_url: "https://charts.gitlab.io/"

    - include_tasks: ./tasks/task-create-certificate.yaml
      vars:
        name: gitlab
        certificate_template: "{{ CERTIFICATE_TEMPLATE }}"
        
    - name: Run pre-requisites
      include_tasks: "{{ INGRESS_SETUP }}"

    - name: Deploying Gitlab
      vars:
        ingress_name: "{{ ingress_class.resources[0].metadata.name }}" 
        version: "{% if release_version is defined and release_version and release_version != 'latest' %}{{ release_version }}{% endif %}"
      kubernetes.core.helm:
        name: gitlab
        atomic: yes
        chart_ref: gitlab/gitlab
        chart_version: "{{ version }}"
        namespace: gitlab
        create_namespace: yes
        values: "{{ VALUES_FILE }}"
        timeout: 10m0s
        wait: yes

    - name: Waiting for Gitlab deployments to be ready
      shell: |
          for d in $(kubectl -n gitlab get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n gitlab deployment/$d; done;

- import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "Gitlab root account password"
    command: "kubectl get secret -n gitlab gitlab-gitlab-initial-root-password -ojsonpath='{.data.password}'"
    filename: "gitlab_root_password"

- import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "Minio credential keys"
    command: 
      "echo accesskey=$(kubectl get secret -n gitlab gitlab-minio-secret -ojsonpath='{.data.accesskey}' | base64 -d); 
       echo -n secretkey=; kubectl get secret gitlab-minio-secret -ojsonpath='{.data.secretkey}'"
    filename: "minio_credential_keys"


