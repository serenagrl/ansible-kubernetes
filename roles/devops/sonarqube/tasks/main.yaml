# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Register DNS entry
  vars:
    domain_prefix: sonarqube
  ansible.builtin.include_role:
    name: common/dns-register

- name: Configure vm.max_map_count (elasticsearch pre-requisite)
  ansible.builtin.include_tasks: update-sysctl.yaml
  loop: "{{ fact_active_hosts }}"

- name: Create sonarqube namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: sonarqube

- name: Install Sonarqube
  block:
    - name: Add Sonarqube chart repo
      kubernetes.core.helm_repository:
        name: sonarqube
        repo_url: "https://SonarSource.github.io/helm-chart-sonarqube"

    - ansible.builtin.include_tasks: ./tasks/task-create-certificate.yaml
      vars:
        name: sonarqube
        certificate_template: "{{ CERTIFICATE_TEMPLATE }}"

    # Notes: Uses own domain name.
    - name: Setup ingress
      ansible.builtin.include_tasks: "{{ INGRESS_SETUP }}"
      vars:
        name: sonarqube
        namespace: sonarqube
        in_definition: "{{ INGRESS_TEMPLATE }}"
        in_create: no

    - name: Deploying sonarqube
      vars:
        ingress_name: "{{ ingress_class.resources[0].metadata.name }}"
        version: "{% if sonarqube.version is defined and sonarqube.version and sonarqube.version != 'latest' %}{{ sonarqube.version }}{% endif %}"
        has_issuer: issuer_status.stdout == "Ready"
      kubernetes.core.helm:
        name: sonarqube
        atomic: yes
        chart_ref: sonarqube/sonarqube
        chart_version: "{{ version }}"
        namespace: sonarqube
        create_namespace: yes
        values: "{{ VALUES_FILE }}"
        timeout: 10m0s
        wait: yes

    - name: Waiting for sonarqube deployments to be ready
      ansible.builtin.shell: |
          for d in $(kubectl -n sonarqube get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n sonarqube deployment/$d; done;

- name: Extract certificates for applications
  block:
    - ansible.builtin.import_tasks: ./tasks/task-extract-cert.yaml
      vars:
        name: "Sonarqube certificate"
        command: "kubectl get -n sonarqube secret sonar-ingress-tls -o jsonpath='{.data.tls\\.crt}'"
        filename: "{{ CERT_FILE }}"

    - ansible.builtin.import_tasks: ./tasks/task-extract-cert.yaml
      vars:
        name: "Sonarqube certificate key"
        command: "kubectl get -n sonarqube secret sonar-ingress-tls -o jsonpath='{.data.tls\\.key}'"
        filename: "{{ KEY_FILE }}"