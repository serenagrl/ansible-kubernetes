# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Add harbor portal DNS entries to /etc/hosts
  become_user: root
  delegate_to: "{{ item }}"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: "127.0.0.1 localhost"
    line: "{{ fact_cluster_address }} core.{{ harbor.domain }} notary.{{ harbor.domain }}"
  loop: "{{ fact_active_hosts + ['localhost'] }}"
  ignore_errors: yes
  ignore_unreachable: yes

- name: Create harbor-system namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: harbor-system

- name: Install harbor
  block:
    - name: Add harbor chart repo
      kubernetes.core.helm_repository:
        name: harbor
        repo_url: "https://helm.goharbor.io"

    - ansible.builtin.include_tasks: ./tasks/task-create-certificate.yaml
      vars:
        name: harbor
        certificate_template: "{{ CERTIFICATE_TEMPLATE }}"

    # Notes: Uses own domain names.
    - name: Setup ingress
      ansible.builtin.include_tasks: "{{ INGRESS_SETUP }}"

    - name: Deploying harbor
      vars:
        ingress_name: "{{ ingress_class.resources[0].metadata.name }}" 
        version: "{% if harbor.version is defined and harbor.version and harbor.version != 'latest' %}{{ harbor.version }}{% endif %}"
        has_issuer: issuer_status.stdout == "Ready"
      kubernetes.core.helm:
        name: harbor
        atomic: yes
        chart_ref: harbor/harbor
        chart_version: "{{ version }}"
        namespace: harbor-system
        create_namespace: yes
        values: "{{ VALUES_FILE }}"
        timeout: 10m0s
        wait: yes

    - name: Waiting for harbor deployments to be ready
      ansible.builtin.shell: |
          for d in $(kubectl -n harbor-system get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n harbor-system deployment/$d; done;

    - name: Waiting for Harbor api to be up
      ansible.builtin.uri:
        url: "https://core.{{ harbor.domain }}/api/v2.0/systeminfo/getcert"
        validate_certs: no
        return_content: true
      register: result
      until: result.status == 200
      retries: 15
      delay: 30

- name: Get harbor registry certificate
  delegate_to: localhost
  become_user: root
  ansible.builtin.copy:
    content: "{{ result.content }}"
    dest: "{{ CERT_FILE }}"

- name: Configure kubernetes nodes to trust registry certificate
  ansible.builtin.include_tasks: trust-cert.yaml
  loop: "{{ fact_active_hosts }}"

- name: Cleanup files
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ CERT_FILE }}"
  when: _cleanup
