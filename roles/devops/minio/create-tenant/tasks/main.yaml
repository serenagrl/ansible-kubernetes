# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Register DNS entry
  vars:
    domain_prefix: "{{ host_entry }}"
  ansible.builtin.include_role:
    name: common/dns-register
  loop:
    - "{{ in_domain_name }}"
    - "{{ in_console_domain_name }}"
  loop_control:
    loop_var: host_entry

- name: Create minio tenant for {{ in_name }}
  block:
    - name: Add minio chart repo
      kubernetes.core.helm_repository:
        name: minio
        repo_url: "https://operator.min.io/"

    - include_tasks: ./tasks/task-create-certificate.yaml
      vars:
        name: "{{ in_tenant_name }}"
        certificate_template: "{{ CERTIFICATE_TEMPLATE }}"

    # Notes: Uses own domain names.
    - name: Setup ingress
      include_tasks: "{{ INGRESS_SETUP }}"

    - name: Deploying minio tenant for {{ in_name }}
      vars:
        ingress_name: "{{ ingress_class.resources[0].metadata.name }}"
        version: "{% if in_minio_tenant.version is defined and in_minio_tenant.version and in_minio_tenant.version != 'latest' %}{{ in_minio_tenant.version }}{% endif %}"
        has_issuer: issuer_status.stdout == "Ready"
      kubernetes.core.helm:
        name: "{{ in_tenant_name }}"
        atomic: yes
        force: yes
        chart_ref: minio/tenant
        chart_version: "{{ version }}"
        namespace: "{{ in_namespace }}"
        create_namespace: yes
        values: "{{ VALUES_FILE }}"
        timeout: 10m0s
        wait: yes

    - name: Waiting for {{ in_name }} minio tenant to be ready
      shell: kubectl wait --for=jsonpath='{.status.currentState}'='Initialized' tenant {{ in_tenant_name }} -n {{ in_namespace }} --timeout=300s

- name: Get minio credentials
  vars:
    overrides:
      "{% if not kube.allow_scheduling %}
        --overrides='{\"spec\":{\"nodeSelector\":{\"node-role.kubernetes.io/control-plane\":\"\"},\"tolerations\":[{\"effect\": \"NoSchedule\", \"key\": \"node-role.kubernetes.io/control-plane\", \"operator\": \"Exists\"}]}}'
      {% endif %}"

  shell: |
    kubectl run --rm -i mc -n {{ in_namespace }} --restart=Never --image=minio/mc {{ overrides }} --command -- bash -c "mc alias set {{ in_tenant_name }} {{ in_minio_tenant.tenant_endpoint }} minio minio123 && mc admin user svcacct add {{ in_tenant_name }} minio"
  register: minio_credentials

- name: Get minio access and secret keys
  vars:
    accesskey: "{{ minio_credentials.stdout | regex_search('Access Key: (.+)', '\\1') | first }}"
    secretkey: "{{ minio_credentials.stdout | regex_search('Secret Key: (.+)', '\\1') | first }}"
  block:
    - name: Create minio storage secret for {{ in_name }}
      kubernetes.core.k8s:
        definition: "{{ STORAGE_SECRET_MANIFEST_TEMPLATE }}"

    - name: Create minio secret for {{ in_name }}
      shell: |
        kubectl delete secret {{ in_minio_tenant.secret_name }} -n {{ in_namespace }} --ignore-not-found
        kubectl create secret generic {{ in_minio_tenant.secret_name }} -n {{ in_namespace }} --from-literal=accesskey={{ accesskey }} --from-literal=secretkey={{ secretkey }}