apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mssql
  namespace: {{ target_namespace }}
spec:
  serviceName: "mssql"
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      securityContext:
        fsGroup: 10001
      containers:
        - name: mssql 
          image: mcr.microsoft.com/mssql/server:{{ release_version }}
          ports:
            - containerPort: 1433
              name: tcpsql
          env:
            - name: MSSQL_PID
              value: "Developer"
            - name: MSSQL_SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-sa-secret
                  key: MSSQL_SA_PASSWORD
          volumeMounts:
            - name: mssql
              mountPath: "/var/opt/mssql"
            - name: mssql-config-volume
              mountPath: "/var/opt/mssql/mssql.conf"
              subPath: mssql.conf
            - name: mssql-certificate
              mountPath: "/etc/ssl/certs/mssql.pem"
              subPath: mssql.pem
            - name: mssql-certificate
              mountPath: "/etc/ssl/certs/mssql.key"
              subPath: mssql.key

      volumes:
        - name: mssql-config-volume
          configMap:
            name: mssql-config
        - name: mssql-certificate
          secret:
            items:
              - key: tls.crt
                path: mssql.pem
              - key: tls.key
                path: mssql.key
            secretName: mssql-tls
            defaultMode: 0755

{% if not _kube.allow_scheduling %}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists

      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
{% endif %}

  volumeClaimTemplates:
    - metadata:
        name: mssql
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi