# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: Register Cluster ({{ kube.cluster.name }}) DNS
  vars:
    in_server_name: "{{ kube.cluster.name }}"
    in_server_ip: "{{ kube.cluster.address }}"
  ansible.builtin.include_role:
    name: infrastructure/dns/register
  when: kube.cluster.use_dns_server

- name: Register node to Haproxy
  vars:
    in_backend_port: 6443
    in_backend_name: "{{ kube.cluster.name }}-apiserver"
  ansible.builtin.include_role:
    name: infrastructure/haproxy/register
  when: register_to_load_balancer

- name: Initializing kubernetes cluster (primary control plane)
  vars:
    release: "{% if kubernetes_version is defined and kubernetes_version and kubernetes_version != 'latest' %}--kubernetes-version {{ kubernetes_version }}{% endif %}"
  ansible.builtin.shell: |
          kubeadm init --pod-network-cidr={{ kube.cluster.cidr_network }} \
          --upload-certs --cri-socket unix:///var/run/containerd/containerd.sock \
          --control-plane-endpoint={{ kube.cluster.name }} \
          {{ release }}

- ansible.builtin.include_role:
    name: kubernetes/control-plane

- name: Update coredns with dns server information
  ansible.builtin.include_tasks: update-coredns.yaml
  when: kube.cluster.use_dns_server