# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
# Notes: If you set _kube.allow_scheduling to no, you will need to manually add tolerations 
#        to the Instance Group -> default -> custom pod spec from the AWX portal.

- name: Create a awx namespace
  kubernetes.core.k8s:
    name: awx
    kind: Namespace
    
- name: Install AWX
  vars:
    ingress_name: "{{ ingress_class.resources[0].metadata.name }}" 
    release: "{% if pkg_version is defined and pkg_version and pkg_version != 'latest' %}{{ version_prefix | default() }}{{ pkg_version }}{% else %}{{ release_tag.stdout }}{% endif %}"
  block:
    # Notes: Uses cluster's domain name and with custom route /awx
    - name: Setup ingress
      include_tasks: "{{ INGRESS_SETUP }}"

    - name: Get latest awx release
      shell: |
          curl -s "https://api.github.com/repos/ansible/awx-operator/releases/latest" | grep tag_name | cut -d '"' -f 4
      register: release_tag
      when: pkg_version is undefined or not pkg_version or pkg_version == "latest"
    
    - delegate_to: localhost
      become_user: root
      block:
        - name: Create kustomize directory
          file:
            path: "{{ MANIFEST_FOLDER }}"
            state: directory

        - name: Create kustomization files
          copy:
            content: "{{ item.content | to_nice_yaml }}"
            dest: "{{ MANIFEST_FOLDER }}/{{ item.filename }}"
          loop:
            - { content: '{{ KUSTOMIZATION_TEMPLATE }}', filename: kustomization.yaml }
            - { content: '{{ PATCH_TOLERATIONS_TEMPLATE }}', filename: patch-tolerations.yaml }

    - name: Install awx operator and deploy awx
      kubernetes.core.k8s:
        definition: "{{ item }}"
      loop:
        - "{{ lookup('kubernetes.core.kustomize', dir=MANIFEST_FOLDER) }}"
        - "{{ MANIFEST_TEMPLATE }}"

- name: Cleanup manifest 
  delegate_to: localhost
  become_user: root
  file:
    path: "{{ MANIFEST_FOLDER }}"
    state: absent
  when: cleanup

- name: Installing AWX cli on Ansible host
  delegate_to: localhost
  become_user: root
  pip:
    name: awxkit

- name: Waiting for AWX deployments to be ready
  shell: |
      for d in $(kubectl -n awx get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n awx deployment/$d; done;
      for d in $(kubectl -n awx get statefulset -o json | jq -r .items[].metadata.name); do kubectl rollout status -n awx statefulset/$d; done;

- name: Waiting for AWX controller host to be up
  uri:
    url: "{{ AWX_HOST }}"
  register: result
  until: result.status == 200
  retries: 20
  delay: 30

- import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "awx portal password"
    command: "kubectl get secret -n awx awx-admin-password -o jsonpath='{.data.password}'"
    filename: "awx_password"