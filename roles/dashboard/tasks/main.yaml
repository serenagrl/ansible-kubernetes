# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- become_user: root
  delegate_to: localhost
  block:
    - import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "kubernetes dashboard"
        namespace: "kubernetes-dashboard"
        repo_path: "kubernetes/dashboard"
        pkg_version: "{{ dashboard.version | default }}"
        version_prefix: "v"
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/aio/deploy/recommended.yaml"]
        #urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/charts/kubernetes-dashboard.yaml"]

    - name: Configure to run on control-planes only
      block:    
        - name: Patch tolerations 
          replace:
            path: "{{ MANIFEST_FILE }}"
            regexp: '^\s*(tolerations:)$'
            replace: |4-
                      \1
                        - effect: NoSchedule
                          key: node-role.kubernetes.io/control-plane
                          operator: Exists

        - name: Patch nodeSelectors
          replace:
            path: "{{ MANIFEST_FILE }}"
            regexp: '^\s*(nodeSelector:)$'
            replace: |4-
                      \1
                        node-role.kubernetes.io/control-plane: ""

      when: not _kube.allow_scheduling

- name: Install kubernetes dashboard
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup
  
- name: Create dashboard ServiceAccount
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: dashboard-admin
        namespace: kube-system

- name: Create dashboard ClusterRoleBinding
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: dashboard-admin
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: dashboard-admin
          namespace: kube-system

- name: Create dashboard Secret
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: dashboard-admin
        namespace: kube-system
        annotations:
          kubernetes.io/service-account.name: dashboard-admin
      type: kubernetes.io/service-account-token

- import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "kubernetes dashboard token"
    command: "kubectl -n kube-system get secret dashboard-admin -o jsonpath='{.data.token}'"

- name: Waiting for kubernetes dashboard to be ready
  shell: kubectl rollout status -n kubernetes-dashboard deployment/kubernetes-dashboard

  # Notes: Use cluster's domain name and with custom route /dashboard
- name: Setup ingress
  include_tasks: "{{ INGRESS_SETUP }}"
  vars:
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    definition: "{{ INGRESS_TEMPLATE }}"  