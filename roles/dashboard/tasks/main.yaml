# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Create kubernetes-dashboard namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: kubernetes-dashboard

  # Notes: Use cluster's domain name and with custom route /dashboard
- name: Setup ingress
  ansible.builtin.include_tasks: "{{ INGRESS_SETUP }}"
  vars:
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    in_definition: "{{ INGRESS_TEMPLATE }}"
    in_create: "{{ INGRESS_CREATE }}"

- name: Add kubernetes dashboard chart repo
  kubernetes.core.helm_repository:
    name: kubernetes-dashboard
    repo_url: "https://kubernetes.github.io/dashboard/"

- name: Deploy kubernetes dashboard
  vars:
    ingress_name: "{{ ingress_class.resources[0].metadata.name }}"
    ingress_host: "{{ ingress_host_result.stdout | default(kube.cluster.name + '.' + kube.cluster.domain, true) }}"
    version: "{% if dashboard.version is defined and dashboard.version and dashboard.version != 'latest' %}{{ dashboard.version }}{% endif %}"
  kubernetes.core.helm:
    name: kubernetes-dashboard
    atomic: yes
    chart_ref: kubernetes-dashboard/kubernetes-dashboard
    chart_version: "{{ version }}"
    namespace: kubernetes-dashboard
    create_namespace: yes
    values: "{{ VALUES_FILE }}"
    wait: yes

- name: Create kubernetes dashboard ServiceAccount
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: dashboard-admin
        namespace: kube-system

- name: Create dashboard ClusterRoleBinding
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: dashboard-admin
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: dashboard-admin
          namespace: kube-system

- name: Create dashboard Secret
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: dashboard-admin
        namespace: kube-system
        annotations:
          kubernetes.io/service-account.name: dashboard-admin
      type: kubernetes.io/service-account-token

- ansible.builtin.import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "kubernetes dashboard token"
    command: "kubectl -n kube-system get secret dashboard-admin -o jsonpath='{.data.token}'"