# Author: Serena Yeoh
# Co-Author: Jaryl Lan
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- become_user: root
  delegate_to: localhost
  block:
    - ansible.builtin.import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "knative operator"
        namespace: "knative"
        repo_path: "knative/operator"
        pkg_version: "{{ knative.version | default }}"
        version_prefix: "knative-v"
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://github.com/{{ repo_path }}/releases/download/{{ release }}/operator.yaml"]

    - name: Configure to run on control-planes only
      ansible.builtin.replace:
        path: "{{ MANIFEST_FILE }}"
        regexp: '^\s*(containers:)$'
        replace: |4-
                  tolerations:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: ""
                  \1

      when: not _kube.allow_scheduling

- name: Install knative operator
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup

- name: Waiting for knative to be ready
  ansible.builtin.shell: |
    for d in $(kubectl -n knative get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n knative deployment/$d; done;