# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Add vmware-tanzu chart repo
  kubernetes.core.helm_repository:
    name: vmware-tanzu
    repo_url: "https://vmware-tanzu.github.io/helm-charts"

- name: Deploying velero
  vars:
    version: "{% if release_version is defined and release_version and release_version != 'latest' %}{{ release_version }}{% endif %}"
  kubernetes.core.helm:
    name: velero
    atomic: yes
    chart_ref: vmware-tanzu/velero
    chart_version: "{{ version }}"
    namespace: velero
    create_namespace: yes
    values: "{{ AZURE_VALUES_FILE }}"
    timeout: 10m0s
    wait: yes

- name: Install velero cli to ansible controller
  delegate_to: localhost
  vars:
    repo_path: vmware-tanzu/velero 
    release: "{% if release_version is defined and release_version and release_version != 'latest' %}v{{ release_version }}{% else %}{{ release_tag.stdout }}{% endif %}"
    tar_file: velero-{{ release }}-linux-amd64.tar.gz
    cli_dir: "{{ _work_dir }}/velero-{{ release }}-linux-amd64"
  block:
    - name: Get latest velero release tag
      shell: |
          curl -s "https://api.github.com/repos/{{ repo_path }}/releases/latest" | grep tag_name | cut -d '"' -f 4
      register: release_tag
      when: release_version is undefined or not release_version or release_version == "latest"

    - name: Downloading and extracting velero cli
      ansible.builtin.unarchive:
        src: "https://github.com/{{ repo_path }}/releases/download/{{ release }}/{{ tar_file }}"
        dest: "{{ _work_dir }}"
        remote_src: yes

    - name: Move velero cli to /usr/local/bin 
      shell: mv {{ cli_dir }}/velero /usr/local/bin

    - name: Cleanup files
      file:
        path: "{{ cli_dir }}"
        state: absent
      when: cleanup

  when: install_cli