# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- delegate_to: "{{ item }}"
  vars:
    hostname: "{{ hostvars[item].ansible_hostname }}"
  block:
    - name: Check for existing Virtual Hard Disks
      ansible.builtin.include_tasks: ./tasks/task-check-vhdx-exist.yaml
      vars:
        # parameter hostname flowing in
        is_local: "{{ virtual_disk.local }}"
        win_folder: "{{ virtual_disk.vm_folder }}"
        disk_name: "{{ virtual_disk.name }}"

    # IMPORTANT! You need to remove the disks manually if you wish to rerun this.
    - name: Create Hyper-V virtual disks and attach them to nodes
      delegate_to: "{{ hostvars[item].winrm_host }}"
      vars:
        vhd_disk: "{{ virtual_disk.vm_folder }}\\{{ hostname }}\\Virtual Hard Disks\\{{ virtual_disk.name }}.vhdx"
      ansible.windows.win_powershell:
        script: |
          New-VHD -Path "{{ vhd_disk }}" -SizeBytes {{ virtual_disk.size }} -Dynamic
          Add-VMHardDiskDrive {{ hostname }} -Path "{{ vhd_disk }}"
        creates: "{{ vhd_disk }}"

    - name: Prepare external disk
      become_user: root
      vars:
        device: "{{ (disks_result | community.general.json_query('files[*].path')).0 }}"
      block:
        - name: Get all devices
          find:
            paths: /dev
            patterns: "sd[a-z]"
            file_type: any
          register: disks_result

        - name: Partition and format {{ device }}
          shell: |
            (echo n; echo p; echo 1; echo ''; echo ''; echo 'w';) | sudo fdisk {{ device }}
            mkfs -t ext4 {{ device }}1

        - name: Create mount point
          ansible.builtin.file:
            path: "{{ virtual_disk.mount_point }}"
            state: directory

        - name: Mount {{ device }} to {{ virtual_disk.mount_point }}
          ansible.posix.mount:
            path: "{{ virtual_disk.mount_point }}"
            src: "{{ device }}1"
            fstype: ext4
            state: mounted

    - name: Add disk to longhorn node
      kubernetes.core.k8s:
        api_version: longhorn.io/v1beta2
        kind: Node
        name: "{{ hostname }}"
        namespace: longhorn-system
        state: patched
        definition: |
          spec:
            disks:
              {{ virtual_disk.name }}:
                allowScheduling: true
                diskType: filesystem
                evictionRequested: false
                path: {{ virtual_disk.mount_point }}
                storageReserved: 0
                tags: {{ virtual_disk.tags }}