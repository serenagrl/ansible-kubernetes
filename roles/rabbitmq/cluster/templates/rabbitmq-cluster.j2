apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: "{{ rabbitmq.name }}"
  namespace: "{{ rabbitmq.namespace }}"
spec:
  replicas: {{ rabbitmq.replicas }}
  service:
    type: "{{ rabbitmq.service_type }}"

  persistence:
    storage: "{{ rabbitmq.storage_size }}"

{% if rabbitmq.enable_tls %}
  tls:
    secretName: rabbitmq-tls-secret
    caSecretName: rabbitmq-tls-secret
    disableNonTLSListeners: true
{% endif %}

  rabbitmq:
    additionalConfig: |
{% if rabbitmq.enable_tls %}
      ssl_options.verify = verify_peer
      ssl_options.fail_if_no_peer_cert = true
{% endif %}
      management.path_prefix = /{{ rabbitmq.namespace }}/rabbitmq

{% if not kube.allow_scheduling %}
  tolerations:
    {{ rabbitmq.tolerations }}
  affinity:
    {{ rabbitmq.affinity }}
{% endif %}

{% if rabbitmq.vault.enabled %}
  secretBackend:
    vault:
      role: {{ rabbitmq.vault.role }}
      annotations:
        vault.hashicorp.com/service: {{ rabbitmq.vault.service }}
        vault.hashicorp.com/tls-secret: {{ rabbitmq.vault.tls_secret }}
        vault.hashicorp.com/ca-cert: {{ rabbitmq.vault.ca }}
        vault.hashicorp.com/client-cert: {{ rabbitmq.vault.client }}
        vault.hashicorp.com/client-key: {{ rabbitmq.vault.client_key }}
      defaultUserPath: {{ rabbitmq.vault.kv_path }}
{% endif %}