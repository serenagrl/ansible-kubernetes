# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: Create {{ rabbitmq.namespace }} namespace
  kubernetes.core.k8s:
    name: "{{ rabbitmq.namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Create RabbitMQ cluster certificate
  kubernetes.core.k8s:
    definition: "{{ CERTIFICATE_TEMPLATE }}"
  when: rabbitmq.enable_tls

- name: Create RabbitMQ cluster
  kubernetes.core.k8s:
    definition: "{{ TEMPLATE }}"

# Notes: Use cluster's domain name and with custom route /prometheus, /grafana and /alerts
- name: Setup ingress
  include_tasks: "{{ INGRESS_SETUP }}"
  vars:
    name: rabbitmq-management
    namespace: "{{ rabbitmq.namespace }}"
    definition: "{{ INGRESS_TEMPLATE }}"

- name: Waiting for rabbitmq cluster to be ready
  shell: "kubectl rollout status -n {{ rabbitmq.namespace }} statefulset/{{ rabbitmq.name }}-server"

- name: Extract certificates for applications
  block:
    - import_tasks: ./tasks/task-extract-cert.yaml
      vars:
        name: "RabbitMQ Certificate Authority (CA) cert"
        command: "kubectl get -n {{ rabbitmq.namespace }} secret rmq-tls-secret -o jsonpath='{.data.ca\\.crt}'"
        cert_dir: "{{ CERT_DIR }}"
        filename: "{{ rabbitmq.cert.ca }}"

    - import_tasks: ./tasks/task-extract-cert.yaml
      vars:
        name: "RabbitMQ cluster certificate"
        command: "kubectl get -n {{ rabbitmq.namespace }} secret rmq-tls-secret -o jsonpath='{.data.tls\\.crt}'"
        cert_dir: "{{ CERT_DIR }}"
        filename: "{{ rabbitmq.cert.cluster }}"

    - import_tasks: ./tasks/task-extract-cert.yaml
      vars:
        name: "RabbitMQ cluster certificate key"
        command: "kubectl get -n {{ rabbitmq.namespace }} secret rmq-tls-secret -o jsonpath='{.data.tls\\.key}'"
        cert_dir: "{{ CERT_DIR }}"
        filename: "{{ rabbitmq.cert.cluster_key }}"

    - become_user: root
      delegate_to: localhost
      block:
        - name: Convert ca cert to DER (.crt)
          shell: "openssl x509 -outform der -in {{ rabbitmq.cert.ca }} -out {{ rabbitmq.cert.ca_crt }}"
          args:
            chdir: "{{ CERT_DIR }}"

        - name: Create PKCS12 cert for dotnet clients (.pfx)
          shell: "openssl pkcs12 -inkey {{ rabbitmq.cert.cluster_key }} -in {{ rabbitmq.cert.cluster }} -export -out {{ rabbitmq.cert.cluster_pfx }} -passout pass:"
          args:
            chdir: "{{ CERT_DIR }}"

  when: rabbitmq.enable_tls and rabbitmq.export_certs

- import_tasks: ./tasks/task-get-secret.yaml
  vars:
    name: "RabbitMQ cluster ({{ rabbitmq.namespace }}) login"
    command: "kubectl get -n {{ rabbitmq.namespace }} secret rabbitmq-default-user -o jsonpath='{.data.default_user\\.conf}'"