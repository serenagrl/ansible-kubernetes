# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Create logging namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: logging

- name: Create minio tenant for Loki
  vars:
    in_name: loki
    in_tenant_name: loki-minio
    in_namespace: logging
    in_domain_name: loki.minio
    in_console_domain_name: console.loki.minio
    in_minio_tenant: "{{ loki.minio_tenant }}"
  ansible.builtin.include_role:
    name: devops/minio/create-tenant
  when: loki.external_minio

- name: Get minio credentials
  ansible.builtin.shell: |
    kubectl get secret -n logging {{ loki.minio_tenant.secret_name }} -ojsonpath='{.data}'
  register: minio_secret
  when: loki.external_minio

- name: Add grafana chart repo
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: "https://grafana.github.io/helm-charts"

- name: Deploying Loki
  vars:
    credentials: "{{ minio_secret.stdout | default() | from_json }}"
    minio_credentials:
      accesskey: "{{ credentials.accesskey | default() | b64decode }}"
      secretkey: "{{ credentials.secretkey | default() | b64decode }}"
    version: "{% if loki.version is defined and loki.version and loki.version != 'latest' %}{{ loki.version }}{% endif %}"
  kubernetes.core.helm:
    name: loki
    atomic: no
    force: yes
    chart_ref: grafana/loki
    chart_version: "{{ version }}"
    namespace: logging
    create_namespace: yes
    values: "{{ VALUES_FILE }}"
    timeout: 10m0s
    wait: no

- name: Patch grafana agent operator deployment
  kubernetes.core.k8s:
    state: patched
    namespace: "logging"
    kind: Deployment
    name: loki-grafana-agent-operator
    definition: |
      spec:
        template:
          spec:
            tolerations:
              - effect: NoSchedule
                key: node-role.kubernetes.io/control-plane
                operator: Exists
            nodeSelector:
              node-role.kubernetes.io/control-plane: ""
  when: not _kube.allow_scheduling

- name: Waiting for loki deployments to be ready
  ansible.builtin.shell: |
    for d in $(kubectl -n logging get deployment -o json | jq -r .items[].metadata.name); do kubectl rollout status -n logging deployment/$d; done;
    for d in $(kubectl -n logging get statefulset -o json | jq -r .items[].metadata.name); do kubectl rollout status -n logging statefulset/$d; done;

- name: Deploy Promtail
  ansible.builtin.include_role:
    name: logging/loki/promtail
  when: loki.use_promtail

- name: Create loki datasource
  community.grafana.grafana_datasource:
    url: "{{ loki.grafana.url }}"
    url_username: "{{ loki.grafana.username }}"
    url_password: "{{ loki.grafana.password }}"
    name: Loki
    org_id: "1"
    ds_type: loki
    ds_url: http://loki-gateway.logging.svc.cluster.local
    access: proxy
    additional_json_data:
      httpHeaderName1: X-Scope-OrgID
    additional_secure_json_data:
      httpHeaderValue1: "1"