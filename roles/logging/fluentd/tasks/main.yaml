# Author: Serena Yeoh
# Co-Author: Jaryl Lan
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Create roles and accounts
  vars:
    elastic_password: "{{ elastic_password_result.stdout }}"
  block:
    - name: Get elastic password
      shell: kubectl get secret elasticsearch-es-elastic-user -n logging -o=jsonpath='{.data.elastic}' | base64 -d
      register: elastic_password_result

    - name: Create fluentd role
      shell: |
          kubectl exec --stdin --tty elasticsearch-es-default-0 -n logging -- curl -XPOST "https://elasticsearch-es-http:9200/_security/role/{{ service_account.fluentd.role }}" -k -u "elastic:{{ elastic_password }}" -H 'Content-Type: application/json' -d'{  "cluster" : [ "monitor" ], "indices": [{ "names": [ "*" ], "privileges": [ "write", "create", "delete", "create_index" ] }] }'

    - name: Create fluentd service account
      shell: |
          kubectl exec --stdin --tty elasticsearch-es-default-0 -n logging -- curl -XPOST "https://elasticsearch-es-http:9200/_security/user/{{ service_account.fluentd.username }}" -k -u "elastic:{{ elastic_password }}" -H 'Content-Type: application/json' -d'{  "password" : "{{ service_account.fluentd.password }}",  "enabled": true,  "roles" : [ "{{ service_account.fluentd.role }}" ],  "full_name" : "Fluentd Service Account" }'

- name: Check for custom certificate secret
  shell: kubectl get secret -n logging elasticsearch-tls -o json | jq .metadata.name -r
  register: secret_status
  ignore_errors: yes

- name: Prepare fluentd manifest
  delegate_to: localhost
  become_user: root
  block:
    - name: Get fluentd kubernetes daemonset manifest
      become_user: root
      get_url:
        url: "https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/fluentd-daemonset-elasticsearch-rbac.yaml"
        dest: "{{ MANIFEST_FILE }}"

    - name: Modify manifest values
      shell: |
              sed -i 's/kube-system$/logging/g' {{ MANIFEST_FILE }}
              sed -i 's/"elasticsearch-logging"/"elasticsearch-es-http"/g' {{ MANIFEST_FILE }}
              sed -i '/name: FLUENT_ELASTICSEARCH_SCHEME/{n;s/value:.*/value: https/}' {{ MANIFEST_FILE }}
              sed -i '/name: FLUENT_ELASTICSEARCH_USER/{n;s/value:.*/value: {{ service_account.fluentd.username }}/}' {{ MANIFEST_FILE }}
              sed -i '/name: FLUENT_ELASTICSEARCH_PASSWORD/{n;s/value:.*/value: {{ service_account.fluentd.password }}/}' {{ MANIFEST_FILE }}

    - name: Configure container environment variables
      blockinfile:
        path: "{{ MANIFEST_FILE }}"
        insertafter: 'value: "9200"'
        marker: "          # {mark} ANSIBLE MANAGED BLOCK"
        block: |2
                    - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
                      value: /var/log/containers/fluent*
                    - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
                      value: /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/
                    - name: SSL_CERT_FILE
                      value: /usr/local/share/ca-certificates/elastic-ca.crt

    - name: Configure cert in volumeMounts
      blockinfile:
        path: "{{ MANIFEST_FILE }}"
        insertafter: 'volumeMounts:'
        marker: "        # {mark} ANSIBLE MANAGED BLOCK"
        block: |2
                  - mountPath: /usr/local/share/ca-certificates
                    name: elasticsearch-ca

    - name: Configure cert in volumes
      vars:
        secret_name: "{% if secret_status.stdout %}elasticsearch-tls{% else %}elasticsearch-es-http-certs-internal{% endif %}"
      blockinfile:
        path: "{{ MANIFEST_FILE }}"
        insertafter: 'volumes:'
        marker: "      # {mark} ANSIBLE MANAGED BLOCK"
        block: |2
                - name: elasticsearch-ca
                  secret:
                    items:
                      - key: ca.crt
                        path: elastic-ca.crt
                    secretName: "{{ secret_name }}"

- name: Installing fluentd
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup directories
  delegate_to: localhost
  become_user: root
  file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: cleanup