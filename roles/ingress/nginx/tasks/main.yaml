# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: Create a ingress-nginx namespace
  kubernetes.core.k8s:
    name: ingress-nginx
    kind: Namespace

- include_tasks: ./tasks/task-create-certificate.yaml
  vars:
    name: ingress-nginx
    ingress_host: "{{ ingress_nginx.metallb.enabled | ternary(ingress_nginx.metallb.host_prefix + '.', '') }}{{ _kube.cluster.name }}.{{ _kube.cluster.domain }}"
    certificate_template: "{{ CERTIFICATE_TEMPLATE }}"

- become_user: root
  delegate_to: localhost
  block:
    - ansible.builtin.import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "ingress nginx"
        namespace: "ingress-nginx"
        repo_path: "kubernetes/ingress-nginx"
        pkg_version: "{{ ingress_nginx.version | default }}"
        version_prefix: "helm-chart-"
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/deploy/static/provider/baremetal/deploy.yaml"]

    - name: Configure default ssl certificate
      ansible.builtin.lineinfile:
        dest: "{{ MANIFEST_FILE }}"
        insertafter: '^\s*(- /nginx-ingress-controller)$'
        line: "        - --default-ssl-certificate=ingress-nginx/root-ingress-tls"

    - name: Configure to run on control-planes only
      ansible.builtin.replace:
        path: "{{ MANIFEST_FILE }}"
        regexp: '^\s*(nodeSelector:)$'
        replace: |4-
                  tolerations:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  \1
                    node-role.kubernetes.io/control-plane: ""
      when: not _kube.allow_scheduling

- name: Install ingress nginx
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup

- name: Scale ingress controller pods = {{ ingress_nginx.scale }}
  vars:
    replicas: "{{ groups['kubernetes_control_planes'] | length }}"
  ansible.builtin.shell: |
      kubectl scale deployment -n ingress-nginx ingress-nginx-controller --replicas={{ replicas }}
  when: ingress_nginx.scale

- name: Configure default ingress nginx class
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: networking.k8s.io/v1
      kind: IngressClass
      metadata:
        name: nginx
        annotations:
          ingressclass.kubernetes.io/is-default-class: "true"
      spec:
        controller: k8s.io/ingress-nginx

- name: Waiting for ingress-nginx-controller to be ready
  ansible.builtin.shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

- name: Configure Ingress
  ansible.builtin.include_tasks: "{{ ingress_nginx.metallb.enabled | ternary('configure-for-metallb.yaml', 'configure-for-haproxy.yaml') }}"