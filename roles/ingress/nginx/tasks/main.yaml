# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- become_user: root
  delegate_to: localhost
  block:
    - ansible.builtin.import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "ingress nginx"
        namespace: "ingress-nginx"
        repo_path: "kubernetes/ingress-nginx"
        pkg_version: "{{ ingress_nginx.version | default }}"
        version_prefix: "helm-chart-"
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/deploy/static/provider/baremetal/deploy.yaml"]

    - name: Configure to run on control-planes only
      ansible.builtin.replace:
        path: "{{ MANIFEST_FILE }}"
        regexp: '^\s*(nodeSelector:)$'
        replace: |4-
                  tolerations:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  \1
                    node-role.kubernetes.io/control-plane: ""
      when: not _kube.allow_scheduling

- name: Install ingress nginx
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup
  
# This is needed. Do not remove.
- name: Check if metallb is installed
  ansible.builtin.shell: kubectl get ns metallb-system -o json | jq .status.phase -r
  register: lb_status
  ignore_errors: yes
        
- name: Configure ingress service type and external IP
  kubernetes.core.k8s:
    state: patched
    namespace: ingress-nginx
    kind: Service
    name: ingress-nginx-controller
    definition: "{{ SERVICE_DEFINITION }}"

- name: Scale ingress controller pods = {{ ingress_nginx.scale }}
  vars:
    replicas: "{{ groups['kubernetes_control_planes'] | length }}"
  ansible.builtin.shell: | 
      kubectl scale deployment -n ingress-nginx ingress-nginx-controller --replicas={{ replicas }}
  when: ingress_nginx.scale

- name: Configure default ingress nginx class
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: networking.k8s.io/v1
      kind: IngressClass
      metadata:
        name: nginx
        annotations:
          ingressclass.kubernetes.io/is-default-class: "true"
      spec:
        controller: k8s.io/ingress-nginx

- name: Waiting for ingress-nginx-controller to be ready
  ansible.builtin.shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

- name: Get ingress service information
  kubernetes.core.k8s_info:
    kind: Service
    namespace: ingress-nginx
    name: ingress-nginx-controller
  register: ingress_service

- name: Add host name into DNS entries
  delegate_to: "{{ item }}"
  become_user: root
  vars:
    address: "{% if lb_status.stdout == 'Active' %}{{ ingress_service.resources[0].status.loadBalancer.ingress.0.ip }}{% else %}{{ ingress_service.resources[0].spec.externalIPs.0 }}{% endif %}"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: "127.0.0.1 localhost"
    line: "{{ address }} {{ _kube.hostname }}"
  loop: "{{ groups['kubernetes_cluster'] + ['localhost'] }}"
  ignore_unreachable: yes
  ignore_errors: yes