# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- import_tasks: ./tasks/task-apply-manifest.yaml
  vars:
    name: "ingress nginx"
    namespace: "ingress-nginx"
    repo_path: "kubernetes/ingress-nginx"
    pkg_version: "{{ release_version | default }}"
    version_prefix: "helm-chart-"
    dest: "{{ MANIFEST_FILE }}"
    urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/deploy/static/provider/baremetal/deploy.yaml"]

- name: Waiting for ingress-nginx-controller to be ready
  shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

- name: Scale ingress controller pods = {{ scale }}
  vars:
    replicas: "{{ groups['kubernetes_control_planes'] | length }}"
  shell: | 
      kubectl scale deployment -n ingress-nginx ingress-nginx-controller --replicas={{ replicas }}
  when: scale

# This is needed. Do not remove.
- name: Check if metallb is installed
  block:
    - shell: kubectl get ns metallb-system -o json | jq .status.phase -r
      register: lb_status
      ignore_errors: yes
        
- name: Configure ingress service type and external IP
  kubernetes.core.k8s:
    state: patched
    namespace: ingress-nginx
    kind: Service
    name: ingress-nginx-controller
    definition: "{{ SERVICE_DEFINITION }}"

- name: Add label to control plane
  kubernetes.core.k8s:
    state: patched
    kind: Node
    name: "{{ item }}"
    definition:
      metadata:
        labels:
          ansible.kubernetes/run: ingress-nginx
  loop: "{{ groups['kubernetes_control_planes'] }}"

- name: Patch ingress nginx controller
  kubernetes.core.k8s:
    state: patched
    namespace: ingress-nginx
    kind: Deployment
    name: ingress-nginx-controller
    definition: 
      spec:
        template:
          spec:
            nodeSelector:
              ansible.kubernetes/run: ingress-nginx
            tolerations:
              - key: node-role.kubernetes.io/control-plane
                operator: Equal
                value: "true"
                effect: NoSchedule
              - key: node-role.kubernetes.io/control-plane
                operator: Equal
                effect: NoSchedule
              - key: node-role.kubernetes.io/master
                operator: Equal
                value: "true"
                effect: NoSchedule
              - key: node-role.kubernetes.io/master
                operator: Equal
                effect: NoSchedule

- name: Configure default ingress nginx class
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition:
      apiVersion: networking.k8s.io/v1
      kind: IngressClass
      metadata:
        name: nginx
        annotations:
          ingressclass.kubernetes.io/is-default-class: "true"
      spec:
        controller: k8s.io/ingress-nginx

- name: Waiting for ingress-nginx-controller to be ready
  shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

- name: Get ingress service information
  kubernetes.core.k8s_info:
    kind: Service
    namespace: ingress-nginx
    name: ingress-nginx-controller
  register: ingress_service

- name: Add host name into DNS entries
  delegate_to: "{{ item }}"
  become_user: root
  vars:
    address: "{% if lb_status.stdout == 'Active' %}{{ ingress_service.resources[0].status.loadBalancer.ingress.0.ip }}{% else %}{{ ingress_service.resources[0].spec.externalIPs.0 }}{% endif %}"
  lineinfile:
    path: /etc/hosts
    insertafter: "127.0.0.1 localhost"
    line: "{{ address }} {{ _kube.hostname }}"
  loop: "{{ groups['kubernetes_cluster'] }}"
  ignore_unreachable: yes
  ignore_errors: yes