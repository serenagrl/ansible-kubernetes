# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- become_user: root
  delegate_to: localhost
  block:
    - ansible.builtin.import_tasks: ./tasks/task-get-manifest.yaml
      vars:
        name: "contour ingress"
        namespace: "projectcontour"
        repo_path: "projectcontour/contour"
        pkg_version: "{{ contour.version | default }}"
        version_prefix: "v"
        dest: "{{ MANIFEST_FILE }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/examples/render/contour.yaml"]

    - name: Configure to run on control-planes only
      ansible.builtin.replace:
        path: "{{ MANIFEST_FILE }}"
        regexp: '^\s*(containers:)$'
        replace: |4-
                  tolerations:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: ""
                  \1
      when: not _kube.allow_scheduling

- name: Install contour
  kubernetes.core.k8s:
    apply: yes
    force: yes
    definition: "{{ lookup('file', MANIFEST_FILE) | from_yaml_all }}"

- name: Cleanup manifest file
  delegate_to: localhost
  become_user: root
  ansible.builtin.file:
    path: "{{ MANIFEST_FILE }}"
    state: absent
  when: _cleanup

- ansible.builtin.import_tasks: ./tasks/task-create-certificate.yaml
  vars:
    name: projectcontour
    certificate_template: "{{ CERTIFICATE_TEMPLATE }}"

- name: Create root HTTPProxy
  kubernetes.core.k8s:
    definition: "{{ INGRESS_CONTOUR_TEMPLATE }}"

- name: Get ingress service information
  kubernetes.core.k8s_info:
    kind: Service
    namespace: projectcontour
    name: envoy
  register: ingress_service

- name: Add host name into DNS entries
  become_user: root
  vars:
    address: "{{ ingress_service.resources[0].status.loadBalancer.ingress.0.ip }}"
  block:
    - name: Register A record to DNS server
      include_role:
        name: "infrastructure/dns/register"
      vars:
        in_server_name: "{{ _kube.cluster.name }}"
        in_server_ip: "{{ address }}"
      when: _kube.cluster.use_dns_server

    - name: Add entry to hosts file
      delegate_to: "{{ item }}"
      ansible.builtin.lineinfile:
        path: /etc/hosts
        insertafter: "127.0.0.1 localhost"
        line: "{{ address }} {{ _kube.cluster.name }}.{{ _kube.cluster.domain }}"
      loop: "{{ fact_active_hosts + ['localhost'] }}"
      ignore_unreachable: yes
      ignore_errors: yes
      when: not _kube.cluster.use_dns_server