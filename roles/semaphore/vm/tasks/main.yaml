# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Gather facts
  ansible.builtin.setup:

- name: Install ansible
  ansible.builtin.include_tasks: "{{ ansible_distribution | lower }}/install-ansible.yaml"
  when: semaphore.install_ansible

- block:
  - name: Install postgres
    ansible.builtin.include_tasks: "{{ ansible_distribution | lower }}/install-postgres.yaml"

  - name: Configure postgres default password
    ansible.builtin.shell: sudo -i -u postgres psql -c "ALTER USER postgres WITH password '{{ semaphore.db_password }}';"

  when: semaphore.install_postgres

- name: Install and configure semaphore UI
  become_user: root
  vars:
    has_version_specified: "{{ (semaphore.version is defined and semaphore.version and semaphore.version != 'latest') | bool }}"
    release: "{{ has_version_specified | ternary(semaphore.version, release_tag.stdout) }}"
    config_file: "{{ semaphore.config_dir }}/config.json"
  block:
    - name: Get latest semaphore UI version
      ansible.builtin.shell: |
        curl -s https://api.github.com/repos/semaphoreui/semaphore/releases/latest | grep tag_name | cut -d '"' -f 4 | cut -d 'v' -f2-
      register: release_tag
      when: not has_version_specified

    # (var)release is flowed in
    - name: Install semaphore UI
      ansible.builtin.include_tasks: "{{ ansible_distribution | lower }}/install-semaphore.yaml"

    - name: Create directory to store config
      ansible.builtin.file:
        path: "{{ semaphore.config_dir }}"
        state: directory

    - name: Create hashes and tokens
      ansible.builtin.shell: |
        head -c32 /dev/urandom | base64
        head -c32 /dev/urandom | base64
        head -c32 /dev/urandom | base64
      register: tokens_result

    - name: Create config file
      vars:
        cookie_hash: "{{ tokens_result.stdout_lines[0] }}"
        cookie_encryption: "{{ tokens_result.stdout_lines[1] }}"
        access_key_encryption: "{{ tokens_result.stdout_lines[2] }}"
      ansible.builtin.copy:
        content: |
          {{ CONFIG_TEMPLATE | to_nice_json(sort_keys=false) }}
        dest: "{{ config_file }}"

    - name: Run semaphore migrations
      ansible.builtin.shell: sudo semaphore --config {{ config_file }} migrate

    - name: Add default semaphore admin
      ansible.builtin.shell: sudo semaphore --config {{ config_file }} user add --admin --login {{ semaphore.admin.login }} --name "{{ semaphore.admin.name }}" --email {{ semaphore.admin.email }} --password {{ semaphore.admin.password }}

    - name: Create systemd service file
      ansible.builtin.copy:
        content: |
          {{ SERVICE_TEMPLATE }}
        dest: "/etc/systemd/system/semaphore.service"

    - name: Start semaphore UI service
      ansible.builtin.systemd:
        daemon_reload: yes
        enabled: yes
        state: restarted
        name: semaphore