- name: Create default environments
  vars:
    environment_url: "{{ SEMAPHORE_URL }}/project/{{ SEMAPHORE_PROJECT_ID }}/environment"
  block:
    - name: Search default empty environment
      ansible.builtin.uri:
        url: "{{ environment_url }}?sort=db-deploy&order=desc" # Default value from https://www.semui.co/api-docs
        method: GET
        return_content: true
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ SEMAPHORE_ACCESS_TOKEN }}"
        status_code: 200
      register: existing_environment

    - name: Delete default empty environment
      ansible.builtin.uri:
        url: "{{ environment_url }}/{{ item.id }}"
        method: DELETE
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ SEMAPHORE_ACCESS_TOKEN }}"
        status_code: 204 # Environment Removed
      loop: "{{ existing_environment.json }}"

    - name: Find variable files
      delegate_to: localhost
      become_user: root
      ansible.builtin.find:
        paths: ./roles
        file_type: directory
        recurse: yes
        use_regex: yes
        patterns: ['.*vars']
      register: file_result

    - name: Read role variable files
      ansible.builtin.slurp:
        src: "{{ local_repo_dir + '/' + item + '/main.yaml' }}"
      register: var_files_result
      loop: "{{ file_result.files | map(attribute='path') | list }}"
      ignore_errors: yes

    - name: Create default environments
      vars:
        var_files:
          results: "{{ var_files_result.results | rejectattr('failed','eq', true) }}"

        add_on_vars:
          add_ons: "{{ item.content }}"

        add_on_vars_with_checkpoint:
          add_ons: "{{ item.content }}"
          checkpoint_name: "{{ item.checkpoint_name }}"

        add_on_vars_to_use: "{{ item.checkpoint_name is defined | ternary(add_on_vars_with_checkpoint, add_on_vars) }}"
      ansible.builtin.uri:
        url: "{{ environment_url }}"
        method: POST
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ SEMAPHORE_ACCESS_TOKEN }}"
        body_format: json
        body: |
          {
            "name": "{{ item.name }}",
            "project_id": {{ SEMAPHORE_PROJECT_ID }},
            "json": {{ item.is_add_on | default(true) | ternary(add_on_vars_to_use, item.content) | to_nice_json(sort_keys=false, indent=2) | to_json }},
            "env": "{}"
          }
        status_code: 204 # Created
      loop:
        - { name: "Setup Infrastructure", content: "{{ INFRA_VARS }}", is_add_on: no }
        - { name: "Setup Basic Add-Ons", content: "{{ BASIC_ADD_ONS_VARS }}" }
        - { name: "Setup Semaphore Project", content: "{{ SEMAPHORE_REG_VARS }}", is_add_on: no }
        - { name: "Setup Add-On - DevOps (Gitlab)", content: "{{ GITLAB_VARS }}", checkpoint_name: "Gitlab Installed." }
        - { name: "Setup Add-On - DevOps (Sonarqube)", content: "{{ SONARQUBE_VARS }}", checkpoint_name: "Sonarqube Installed." }
        - { name: "Setup Add-On - DevOps (Harbor)", content: "{{ HARBOR_VARS }}", checkpoint_name: "Harbor Installed." }
        - { name: "Setup Add-On - DevOps (ArgoCD)", content: "{{ ARGOCD_VARS }}", checkpoint_name: "ArgoCD Installed." }
        - { name: "Setup Add-On - DevOps (Tekton)", content: "{{ TEKTON_VARS }}", checkpoint_name: "Tekton Installed." }
        - { name: "Setup Add-On - DevOps (Minio)", content: "{{ MINIO_VARS }}", checkpoint_name: "Minio Installed." }
        - { name: "Setup Add-On - DevOps (Kyverno)", content: "{{ KYVERNO_VARS }}", checkpoint_name: "Kyverno installed." }
        - { name: "Setup Add-On - Logging (Elastic Stack)", content: "{{ ELASTIC_STACK_VARS }}", checkpoint_name: "Elastic Stack Installed." }
        - { name: "Setup Add-On - Logging (Fluentd)",  content: "{{ FLUENTD_VARS }}", checkpoint_name: "Fluentd Installed." }
        - { name: "Setup Add-On - Logging (Loki)", content: "{{ LOKI_VARS }}", checkpoint_name: "Loki Installed." }
        - { name: "Setup Add-On - AWX", content: "{{ AWX_REG_VARS }}", checkpoint_name: "AWX Installed." }
        - { name: "Setup Add-On - CSI", content: "{{ CSI_VARS }}", is_add_on: no }
        - { name: "Setup Add-On - Goldilocks", content: "{{ GOLDILOCKS_VARS }}", checkpoint_name: "Goldilocks Installed." }
        - { name: "Setup Add-On - Istio", content: "{{ ISTIO_VARS }}", checkpoint_name: "Istio Installed." }
        - { name: "Setup Add-On - Kafka", content: "{{ KAFKA_VARS }}", checkpoint_name: "Kafka Installed." }
        - { name: "Setup Add-On - Keycloak", content: "{{ KEYCLOAK_VARS }}", checkpoint_name: "Keycloak Installed." }
        - { name: "Setup Add-On - Knative", content: "{{ KNATIVE_VARS }}", checkpoint_name: "Knative Installed." }
        - { name: "Setup Add-On - MetalLB", content: "{{ METALLB_VARS }}", checkpoint_name: "Metallb installed." }
        - { name: "Setup Add-On - MSSQL Server", content: "{{ MSSQL_VARS }}", checkpoint_name: "MSSQL Server Installed." }
        - { name: "Setup Add-On - RabbitMQ", content: "{{ RABBITMQ_VARS }}", checkpoint_name: "RabbitMQ Installed." }
        - { name: "Setup Add-On - Redis", content: "{{ REDIS_VARS }}", checkpoint_name: "Redis Installed." }
        - { name: "Setup Add-On - Tracing", content: "{{ TRACING_VARS }}", checkpoint_name: "Tracing Installed." }
        - { name: "Setup Add-On - Trivy", content: "{{ TRIVY_VARS }}", checkpoint_name: "Trivy installed." }
        - { name: "Setup Add-On - Velero", content: "{{ VELERO_VARS }}", checkpoint_name: "Velero Installed." }

    - name: Query all environment records
      ansible.builtin.uri:
        url: "{{ SEMAPHORE_URL }}/project/{{ SEMAPHORE_PROJECT_ID }}/environment"
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ SEMAPHORE_ACCESS_TOKEN }}"
      register: environment_response
