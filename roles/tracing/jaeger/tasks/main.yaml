# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#

- name: Verify dependencies
  ansible.builtin.include_tasks: verify-dependencies.yaml

- name: Create tracing namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: tracing

  # Notes: Use cluster's domain name and with custom route /query, /hotrod
  # We are not creating anything for ingress but we need to query the ingress_class.
- name: Setup ingress
  ansible.builtin.include_tasks: "{{ INGRESS_SETUP }}"
  vars:
    name: "{{ (item.metadata.name | default('jaeger')).replace('-httpproxy','')}}"
    namespace: tracing
    in_definition: "{{ item }}"
    in_create: "{{ INGRESS_CREATE }}"
    templates: "{{ INGRESS_TEMPLATES[kube.ingress_type] }}"
    # only process the templates when it is not nginx (value = '')
    include_templates: "{{ jaeger.hotrod.enabled | ternary(templates, (templates[0] != '') | ternary((templates | selectattr('metadata.name', 'defined') |
                                                   rejectattr('metadata.name', 'eq', 'jaeger-hotrod-httpproxy') | list), templates)) }}"
  loop: "{{ include_templates }}"

- name: Add jaeger chart repo
  kubernetes.core.helm_repository:
    name: jaegertracing
    repo_url: "https://jaegertracing.github.io/helm-charts"

- name: Deploy jaeger
  vars:
    ingress_name: "{{ ingress_class.resources[0].metadata.name }}"
    ingress_host: "{{ ingress_host_result.stdout | default(kube.cluster.name + '.' + kube.cluster.domain, true) }}"
    version: "{% if jaeger.version is defined and jaeger.version and jaeger.version != 'latest' %}{{ jaeger.version }}{% endif %}"
  kubernetes.core.helm:
    name: jaeger
    atomic: yes
    force: yes
    chart_ref: jaegertracing/jaeger
    chart_version: "{{ version }}"
    namespace: tracing
    create_namespace: yes
    values: "{{ VALUES_FILE }}"
    wait: yes