# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Creates Ubuntu Hyper-V Virtual Machines >>>>>
  delegate_to: localhost
  run_once: yes
  block:
    - name: Installing iso and image tools
      apt:
        pkg:
          - qemu-utils
          - genisoimage
        state: latest
        update_cache: true

    - name: Create working directory
      file:
        path: "{{ _work_dir }}"
        state: directory        

    - name: Downloading ubuntu cloud image 
      get_url:
        url: "{{ ubuntu_img_url }}"
        dest: "{{ _work_dir }}/ubuntu-cloud.img"     

    - name: Generate ssh keys for Ansible host (if required)
      shell: ssh-keygen -t rsa -q -f "/root/.ssh/id_rsa" -N ""
      args:
        creates: /root/.ssh/id_rsa

- name: Prepare configuration metadata and seed iso
  delegate_to: localhost
  block:
    - name: Remove previous metadata directory (if any)
      file:
        path: "{{ METADATA_DIR }}"
        state: absent

    - name: Create meta-data file
      blockinfile:
        path: "{{ METADATA_DIR }}/meta-data"
        create: yes
        block: |
          instance-id: "{{ inventory_hostname }}-id"
          local-hostname: "{{ inventory_hostname }}"

    - name: Create user-data file
      vars:
        id_rsa_pub: "{{ lookup('file','/root/.ssh/id_rsa.pub') }}"
      blockinfile:
        path: "{{ METADATA_DIR }}/user-data"
        create: yes
        marker: ''
        block: "{{ CLOUD_INIT_TEMPLATE }}"

    - name: Create Seed iso
      shell: |
              mkdir -p "{{ iso.ubuntu }}"
              genisoimage -output "{{ iso.ubuntu }}/{{ inventory_hostname }}-seed.iso" -volid cidata -joliet -rock {{ METADATA_DIR }}

    - name: Remove metadata directory 
      file:
        path: "{{ METADATA_DIR }}"
        state: absent
      when: cleanup

    - name: Create Virtual Hard Disks directory
      file:
        path: "{{ dir.ubuntu }}/{{ inventory_hostname }}/Virtual Hard Disks"
        state: directory    

    - name: Check if Virtual Hard Disk exists.
      find:
        paths: "{{ dir.ubuntu }}/{{ inventory_hostname }}/Virtual Hard Disks/"
        patterns: "{{ inventory_hostname }}.vhdx"
      register: file_exist

    - fail:
        msg: "Virtual Hard Disk {{ inventory_hostname }}.vhdx already exist. Please detach it from Hyper-V and perform the necessary backup or deletion before proceeding with this task."
      when: file_exist.matched > 0

    - name: Preparing vhdx files for the Virtual Machines
      vars:
        vhd_disk: "{{ dir.ubuntu }}/{{ inventory_hostname }}/Virtual Hard Disks/{{ inventory_hostname }}.vhdx"
      shell: |
              qemu-img convert -f qcow2 ubuntu-cloud.img -O vhdx -o subformat=dynamic "{{ vhd_disk }}"
      args:
        chdir: "{{ _work_dir }}"


- name: Create and Launch Virtual Machines
  block:
    - name: Provisioning Hyper-V Virtual Machines
      vars:
        vhd_disk: "{{ dir.windows }}\\{{ inventory_hostname }}\\Virtual Hard Disks\\{{ inventory_hostname }}.vhdx"
      ansible.windows.win_powershell:
        script: |
          Resize-VHD -Path "{{ vhd_disk }}" -SizeBytes {{ specs.disk_size }}
          New-VM -Name {{ inventory_hostname }} -Generation 2 -MemoryStartupBytes {{ specs.ram_size }} -Path "{{ dir.windows }}" -VHDPath "{{ vhd_disk }}" -SwitchName "{{ switch }}" 
          Add-VMDvdDrive {{ inventory_hostname }} -Path "{{ iso.windows }}\\{{ inventory_hostname }}-seed.iso"
          Set-VMProcessor {{ inventory_hostname }} -Count {{ specs.v_cpu }}
          Set-VMFirmware -VMName {{ inventory_hostname }} -EnableSecureBoot Off 
          Set-VMMemory {{ inventory_hostname }} -MinimumBytes {{ specs.min_ram_size }} -DynamicMemoryEnabled 1
          Start-VM {{ inventory_hostname }}

    - name: Waiting for ubuntu configuration to complete
      ansible.windows.win_powershell:
        script: |
          Wait-VM -Name {{ inventory_hostname }} -For Reboot

    - name: Unmount and remove seed.iso 
      ansible.windows.win_powershell:
        script: |
          Get-VMDvdDrive -VMName "{{ inventory_hostname }}" | Remove-VMDvdDrive
          rm {{ inventory_hostname }}-seed.iso

        chdir: "{{ iso.windows }}"
      when: cleanup

  delegate_to: "{{ winrm_host }}"

- name: Configure ssh connectivity for Ansible host
  delegate_to: localhost
  become_user: root
  block:
    - name: Checking ssh port availability
      wait_for:
        host: "{{ ansible_host }}"
        port: 22

    - name: Remove known_host entries from Ansible host (if exist)
      shell: |
              touch /root/.ssh/known_hosts
              ssh-keygen -f /root/.ssh/known_hosts -R {{ ansible_host }}

    - name: Register servers as known hosts to Ansible hosts
      shell: |
              ssh-keyscan -H {{ ansible_host }} >> /root/.ssh/known_hosts
