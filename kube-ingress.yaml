# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Install and configure Ingress Nginx >>>>>
  hosts: kubernetes_control_planes[0]
  become_user: "{{ _kube.user }}"

  vars:
    manifest_file: "{{ _work_dir }}/ingress-nginx-deployment.yaml"
    
  tasks:
    - import_tasks: ./tasks/task-apply-manifest.yaml
      vars:
        name: "ingress nginx"
        namespace: "ingress-nginx"
        repo_path: "kubernetes/ingress-nginx"
        pkg_version: "{{ _pkg.ingress_nginx | default }}"
        version_prefix: "helm-chart-"
        dest: "{{ manifest_file }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/deploy/static/provider/baremetal/deploy.yaml"]

    - name: Waiting for ingress-nginx-controller to be ready
      shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

    - name: Scale ingress controller pods = {{ _ingress.scale }}
      vars:
        replicas: "{{ groups['kubernetes_control_planes'] | length }}"
      shell: | 
         kubectl scale deployment -n ingress-nginx ingress-nginx-controller --replicas={{ replicas }}
      when: _ingress.scale

    - name: Configure for load balancing = {{ _kube.install.metallb }}
      kubernetes.core.k8s:
        state: patched
        namespace: ingress-nginx
        kind: Service
        name: ingress-nginx-controller
        definition: |
          spec:
            type: LoadBalancer
      when: _kube.install.metallb

    - name: Patch ExternalIPs
      kubernetes.core.k8s:
        state: patched
        namespace: ingress-nginx
        kind: Service
        name: ingress-nginx-controller
        definition:
          spec:
            externalIPs: "[ '{{ _kube.cluster.address }}' ]"
      when: _kube.install.metallb is undefined or not _kube.install.metallb 

    - name: Add label to control plane
      kubernetes.core.k8s:
        state: patched
        kind: Node
        name: "{{ item }}"
        definition:
          metadata:
            labels:
              ansible.kubernetes/run: ingress-nginx
      loop: "{{ groups['kubernetes_control_planes'] }}"

    - name: Patch ingress nginx controller
      kubernetes.core.k8s:
        state: patched
        namespace: ingress-nginx
        kind: Deployment
        name: ingress-nginx-controller
        definition: 
          spec:
            template:
              spec:
                nodeSelector:
                  ansible.kubernetes/run: ingress-nginx
                tolerations:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Equal
                    value: "true"
                    effect: NoSchedule
                  - key: node-role.kubernetes.io/control-plane
                    operator: Equal
                    effect: NoSchedule
                  - key: node-role.kubernetes.io/master
                    operator: Equal
                    value: "true"
                    effect: NoSchedule
                  - key: node-role.kubernetes.io/master
                    operator: Equal
                    effect: NoSchedule

    - name: Configure default ingress nginx class
      kubernetes.core.k8s:
        apply: yes
        force: yes
        definition:
          apiVersion: networking.k8s.io/v1
          kind: IngressClass
          metadata:
            name: nginx
            annotations:
              ingressclass.kubernetes.io/is-default-class: "true"
          spec:
            controller: k8s.io/ingress-nginx

    - name: Waiting for ingress-nginx-controller to be ready
      shell: kubectl rollout status -n ingress-nginx deployment/ingress-nginx-controller

    - name: Get ingress service information
      kubernetes.core.k8s_info:
        kind: Service
        namespace: ingress-nginx
        name: ingress-nginx-controller
      register: ingress_service

    - name: Add host name into DNS entries
      become_user: root
      vars:
        address: "{% if _kube.install.metallb is defined and _kube.install.metallb %}{{ ingress_service.resources[0].status.loadBalancer.ingress.0.ip }}{% else %}{{ _kube.cluster.address }}{% endif %}"
      lineinfile:
        path: /etc/hosts
        insertafter: "127.0.0.1 localhost"
        line: "{{ address }} {{ _ingress.host }}"
      delegate_to: "{{ item }}"
      loop: "{{ groups['kubernetes_cluster'] }}"