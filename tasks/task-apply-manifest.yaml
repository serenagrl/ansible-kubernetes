- name: Download {{ name }} manifest
  become_user: root
  vars:
    release: "{% if pkg_version is defined and pkg_version and pkg_version != 'latest' %}{{ version_prefix | default() }}{{ pkg_version }}{% else %}{{ release_tag.stdout }}{% endif %}"
  block:
    - name: Get latest {{ name }} release tag
      shell: |
          curl -s "https://api.github.com/repos/{{ repo_path }}/releases/latest" | grep tag_name | cut -d '"' -f 4
      register: release_tag
      when: pkg_version is undefined or not pkg_version or pkg_version == "latest"

    - name: Get {{ name }} ({{ release }}) manifest
      get_url:
        url: "{{ item }}"
        dest: "{{ dest }}"
      loop: "{{ urls }}"
  delegate_to: localhost

- name: Installing {{ name }}
  kubernetes.core.k8s:
    apply: yes
    force: yes
    namespace: "{{ namespace }}"
    definition: "{{ lookup('file', dest) | from_yaml_all }}"

- name: Cleanup manifest file
  become_user: root
  file:
    path: "{{ dest }}"
    state: absent
  delegate_to: localhost
