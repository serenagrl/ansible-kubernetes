# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Installs and configures the kubernetes dashboard >>>>>
  hosts: kubernetes_control_planes[0]
  become_user: "{{ _kube.user }}"
  
  vars:
    manifest_file: "{{ _work_dir }}/dashboard.yaml"  

  tasks:
    - import_tasks: ./tasks/task-apply-manifest.yaml
      vars:
        name: "kubernetes dashboard"
        namespace: "kubernetes-dashboard"
        repo_path: "kubernetes/dashboard"
        pkg_version: "{{ _pkg.dashboard | default }}"
        version_prefix: "v"
        dest: "{{ manifest_file }}"
        urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/aio/deploy/recommended.yaml"]

    - name: Patch dashboard service to NodePort {{ _dashboard.nodeport }}
      kubernetes.core.k8s:
        state: patched
        namespace: kubernetes-dashboard
        kind: Service
        name: kubernetes-dashboard
        definition: |
          spec:
            type: NodePort
            ports:
            - nodePort: {{ _dashboard.nodeport }}
              port: 443
              protocol: TCP
              targetPort: 8443
      when: _kube.use_nodeport

    - name: Create dashboard ServiceAccount
      kubernetes.core.k8s:
        apply: yes
        force: yes
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: dashboard-admin
            namespace: kube-system

    - name: Create dashboard ClusterRoleBinding
      kubernetes.core.k8s:
        apply: yes
        force: yes
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: dashboard-admin
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
            - kind: ServiceAccount
              name: dashboard-admin
              namespace: kube-system

    - name: Create dashboard Secret
      kubernetes.core.k8s:
        apply: yes
        force: yes
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: dashboard-admin
            namespace: kube-system
            annotations:
              kubernetes.io/service-account.name: dashboard-admin
          type: kubernetes.io/service-account-token

    - import_tasks: ./tasks/task-get-secret.yaml
      vars:
        name: "dashboard account token"
        command: "kubectl -n kube-system get secret dashboard-admin -o jsonpath='{.data.token}'"
        filename: "kubernetes_dashboard_token"

    - name: Waiting for kubernetes dashboard to be ready
      shell: kubectl rollout status -n kubernetes-dashboard deployment/kubernetes-dashboard

    - import_tasks: ./tasks/task-create-ingress-route.yaml
      vars:
        namespace: kubernetes-dashboard
        name: kubernetes-dashboard-ingress
        protocol: HTTPS
        route: dashboard
        service_name: kubernetes-dashboard
        port: 443

