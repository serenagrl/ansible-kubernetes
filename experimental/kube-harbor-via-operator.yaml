# Author: Serena Yeoh
#
# Disclaimer:
# This playbook was written based on my self-learning and may not follow certain
# best practices or work properly in your environment. Use it at your own risk.
#
- name: <<<<< Install and configure Harbor container registry >>>>>
  hosts: kubernetes_cluster
  become: yes

  tasks:
    - name: Add harbor portal to DNS entry to /etc/hosts
      lineinfile:
        path: /etc/hosts
        insertafter: "127.0.1.1 {{ ansible_hostname }}"
        line: "{{ _kube.cluster.address }} core.{{ _harbor.domain }} notary.{{ _harbor.domain }}"

- name: Install harbor container registry
  hosts: kubernetes_control_plane
  become: yes
  become_user: "{{ _kube.user }}"

  vars:
    manifest:
      harbor: "{{ _work_dir }}/harbor.yaml"
      operator: "{{ _work_dir }}/harbor-operator.yaml"
      cert_mgr: "{{ _work_dir }}/cert-manager.yaml"

    stacks: { 
              minimal: "minimal_stack_fs.yaml",
              standard: "standard_stack_fs.yaml",
              full: "full_stack.yaml"
            }

  tasks:
    - name: Download manifests
      become_user: root
      block:
        - import_tasks: ./tasks/task-get-manifest.yaml
          vars:
            name: "cert manager"
            repo_path: "cert-manager/cert-manager"
            pkg_version: "{{ _pkg.cert_manager | default }}"
            version_prefix: "v"
            dest: "{{ manifest.cert_mgr }}"
            urls: ["https://github.com/{{ repo_path }}/releases/download/{{ release }}/cert-manager.yaml"]

        - import_tasks: ./tasks/task-get-manifest.yaml
          vars:
            name: "harbor operator"
            repo_path: "goharbor/harbor-operator"
            pkg_version: "{{ _pkg.harbor | default }}"
            version_prefix: "v"
            dest: "{{ manifest.operator }}"
            urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/manifests/cluster/deployment.yaml"]

        - import_tasks: ./tasks/task-get-manifest.yaml
          vars:
            name: "harbor sample deployment"
            repo_path: "goharbor/harbor-operator"
            pkg_version: "{{ _pkg.harbor | default }}"
            version_prefix: "v"
            dest: "{{ manifest.harbor }}"
            urls: ["https://raw.githubusercontent.com/{{ repo_path }}/{{ release }}/manifests/samples/{{ stacks[_harbor.stack] }}"]

        - name: Touch up the namepaces
          shell: |
                  sed -i 's/harbor-operator-ns/harbor-operator/g' {{ manifest.operator }}
                  sed -i 's/cluster-sample-ns/harbor-system/g' {{ manifest.harbor }}
                  sed -i 's/harborcluster-sample/harbor-cluster/g' {{ manifest.harbor }}
                  sed -i 's/harbor.domain/{{ _harbor.domain }}/g' {{ manifest.harbor }}

      delegate_to: localhost

    - name: Installing cert manager
      kubernetes.core.k8s:
        definition: "{{ lookup('file', '{{ manifest.cert_mgr }}') | from_yaml_all }}"

    - include_tasks: ./tasks/task-wait-ready.yaml
      vars:
        namespace: cert-manager
        name: "{{ item }}"
      loop:
        - "cert-manager-webhook"
        - "cert-manager"
        - "cert-manager-cainjector"  

    - name: Installing harbor operator
      kubernetes.core.k8s:
        definition: "{{ lookup('file', '{{ manifest.operator }}') | from_yaml_all }}"

    - import_tasks: ./tasks/task-wait-ready.yaml
      vars:
        namespace: harbor-operator
        name: harbor-operator

    - name: Installing harbor
      kubernetes.core.k8s:
        definition: "{{ lookup('file', '{{ manifest.harbor }}') | from_yaml_all }}"

    - include_tasks: ./tasks/task-wait-ready.yaml
      vars:
        namespace: harbor-system
        name: "{{ item }}"
      loop:
        - "harbor-cluster-harbor-harbor-jobservice"
        - "harbor-cluster-harbor-harbor-portal"  

    - name: Waiting for Harbor api to be up
      uri:
        url: "https://core.{{ _harbor.domain }}/api/v2.0/systeminfo/getcert"
        validate_certs: no
      register: result
      until: result.status == 200
      retries: 15
      delay: 30

    - name: Get harbor registry certificate
      become_user: root
      block:
        - name: Get harbor registry certificate
          get_url:
            url: https://core.{{ _harbor.domain }}/api/v2.0/systeminfo/getcert
            dest: "{{ _work_dir }}/harbor-ca.crt"
            mode: '0644'
            force: true
            validate_certs: no

      delegate_to: localhost

- name: Configure kubernetes nodes to trust registry certificate
  hosts: kubernetes_nodes
  become: yes
  become_user: root
  vars:
    cert_dir: "/usr/local/share/ca-certificates"

  tasks:
    - name: Copy registry certificate to shared certificate directory
      copy:
        src: "{{ _work_dir }}/harbor-ca.crt"
        dest: "{{ cert_dir }}/harbor-ca.crt"
        mode: 0777

    - name: Update certificates
      shell: update-ca-certificates

    - name: Restart containerd to recognize the cert
      systemd:
        state: restarted
        name: containerd